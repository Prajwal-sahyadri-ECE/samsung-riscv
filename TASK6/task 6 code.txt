#include <ch32v00x.h>
#include <debug.h>

#define IR_SENSOR_GPIO_PORT GPIOC
#define IR_SENSOR_GPIO_PIN GPIO_Pin_4
#define IR_SENSOR_CLOCK_ENABLE RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE)

#define LED_GPIO_PORT GPIOD
#define LED_GPIO_PIN GPIO_Pin_6
#define LED_CLOCK_ENABLE RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE)

void NMI_Handler(void) __attribute__((interrupt("WCH-Interrupt-fast")));
void HardFault_Handler(void) __attribute__((interrupt("WCH-Interrupt-fast")));
void Delay_Init(void);
void Delay_Ms(uint32_t n);

int main(void)
{
    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
    SystemCoreClockUpdate();
    Delay_Init();

    GPIO_InitTypeDef GPIO_InitStructure = {0};

    
    LED_CLOCK_ENABLE;
    IR_SENSOR_CLOCK_ENABLE;

    
    GPIO_InitStructure.GPIO_Pin = LED_GPIO_PIN;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(LED_GPIO_PORT, &GPIO_InitStructure);

    
    GPIO_InitStructure.GPIO_Pin = IR_SENSOR_GPIO_PIN;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(IR_SENSOR_GPIO_PORT, &GPIO_InitStructure);

    while (1)
    {
        
        if (GPIO_ReadInputDataBit(IR_SENSOR_GPIO_PORT, IR_SENSOR_GPIO_PIN))
        {
            // IR sensor detected something → Turn LED OFF
            GPIO_ResetBits(LED_GPIO_PORT, LED_GPIO_PIN);
        }
        else
        {
            // No detection → Turn LED ON
            GPIO_SetBits(LED_GPIO_PORT, LED_GPIO_PIN);
        }

        Delay_Ms(100); 
    }
}

void NMI_Handler(void) {}
void HardFault_Handler(void)
{
    while (1)
    {
    }
}
